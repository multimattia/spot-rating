---
const { id } = Astro.params;
import { db, Playlists } from "astro:db";
import { Image } from "astro:assets";
import TrackListing from "@components/TrackListing.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { spotify } from "src/lib/auth";

const spotifyTrackResponse = await fetch(
  `https://api.spotify.com/v1/playlists/${id}?fields=name%2Cid%2Cimages%28url%2C+width%2C+height%29%2C+followers%28total%29%2C+owner%28id%2Cdisplay_name%29%2C`,
  {
    headers: {
      Authorization: `Bearer ${Astro.locals.accessToken}`,
    },
  }
);

let spotifyTrackData;
if (spotifyTrackResponse.ok) {
  spotifyTrackData = await spotifyTrackResponse.json();

  console.log(JSON.stringify(spotifyTrackData, null, 2));
  try {
    await db.insert(Playlists).values({
      userId: Astro.locals.currentUser.id,
      ownerId: spotifyTrackData.owner.id,
      spotifyId: spotifyTrackData.id,
      name: spotifyTrackData.name,
    });
  } catch (e) {
    console.error(`id playlist endpoint error: ${e}`);
  }
} else {
  console.error(
    "error: ",
    spotifyTrackResponse.status,
    spotifyTrackResponse.statusText
  );
  spotifyTrackData = [];
}
---

<BaseLayout
  title={`Playlist: ${spotifyTrackData.name}`}
  existingUser={Astro.locals.currentUser}
>
  <div class="playlist-header">
    <Image
      src={spotifyTrackData.images[0].url}
      alt=""
      width="200"
      height="200"
    />
    <div class="playlist-info">
      <h1>{spotifyTrackData.name}</h1>
      <h3>by {spotifyTrackData.owner.display_name}</h3>
      <h4>{spotifyTrackData.followers.total} followers</h4>
    </div>
  </div>
  <!-- <TrackListing trackData={spotifyTrackData.tracks.items} id={id} /> -->
  <TrackListing id={id} />
</BaseLayout>

<style>
  .playlist-header {
    margin: 3rem 1rem;
    padding-bottom: 2rem;
    display: flex;
    align-items: center;
    gap: 3rem;
    background: rgb(0, 0, 0);
    background: linear-gradient(
      347deg,
      rgba(0, 0, 0, 0.17) 0%,
      rgba(255, 255, 255, 1) 58%
    );
  }
</style>
